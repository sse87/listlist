{"version":3,"sources":["components/ItemItem/ItemItem.js","components/ListList/ListList.js","utilityFunctions.js","misc/useLocalStorage.js","App.js","serviceWorker.js","index.js"],"names":["ItemItem","_ref","item","isItemActive","onCheck","onEdit","onDelete","_React$useState","React","useState","_React$useState2","Object","slicedToArray","editingItem","setEditingItem","_React$useState3","_React$useState4","editingText","setEditingText","_React$useState5","_React$useState6","itemMenuAnchorEl","setItemMenuAnchorEl","itemMenuOpen","Boolean","react_default","a","createElement","ListItem","className","component","Paper","elevation","style","opacity","checked","react","ListItemText","primary","Checkbox","color","fontWeight","userSelect","textDecoration","text","onClick","id","IconButton","aria-label","aria-owns","aria-haspopup","e","currentTarget","MoreVert","Menu","anchorEl","open","onClose","MenuItem","ListItemIcon","Edit","inset","Delete","Grid","container","flexGrow","TextField","fullWidth","autoFocus","onChange","target","value","Button","variant","size","Check","fontSize","Close","defaultProps","SortableElement","ListList","items","sortingItemIndex","onSortStart","onSortEnd","SortableList","lockAxis","useWindowAsScrollContainer","transitionDuration","pressDelay","helperClass","SortableContainer","_ref2","List","padding","map","index","components_ItemItem_ItemItem","key","concat","ALPHABET","makeId","length","arguments","undefined","Array","join","split","charAt","Math","floor","random","stringifyItems","btoa","reduce","acc","curr","substr","replace","getShareLink","window","location","origin","pathname","parseItems","strItems","atob","strItem","substring","pluralItems","nr","singularWord","pluralWord","includeNr","plural","testShareMethod","itemsX","isArray","console","log","itemsStringified","itemsY","x","y","useLocalStorage","initialValue","raw","_useState","localStorageValue","localStorage","getItem","setItem","String","JSON","stringify","parse","error","_useState2","state","setState","useEffect","serializedState","theme","createMuiTheme","palette","indigo","typography","useNextVariants","App","_useLocalStorage","_useLocalStorage2","setItems","sortingItem","setSortingItem","modalAddItemsOpen","setModalAddItemsOpen","textareaAddItems","setTextareaAddItems","_React$useState7","_React$useState8","appMenuAnchorEl","setAppMenuAnchorEl","_React$useState9","_React$useState10","confirmCounterdeleteAllChecked","setConfirmCounterdeleteAllChecked","_React$useState11","_React$useState12","confirmCounterdeleteAllItems","setConfirmCounterdeleteAllItems","_React$useState13","_React$useState14","snackbarCopiedConfirmOpen","setSnackbarCopiedConfirmOpen","_React$useState15","_React$useState16","snackbarDeletedUndoOpen","setSnackbarDeletedUndoOpen","_React$useState17","_React$useState18","itemsToBeImport","setItemsToBeImport","_React$useState19","_React$useState20","itemsBeforeDeletion","setItemsBeforeDeletion","checkForImports","importString","vars","search","i","posSplit","indexOf","getQueryVariable","newItems","setTimeout","href","overwriteItems","Promise","resolve","handleImportConflictClose","menuAppOpen","modalImportConflictOpen","isAnyItemsChecked","some","MuiThemeProvider","AppBar","position","Toolbar","Typography","title","appVersion","paddingBottom","Fragment","Zoom","in","components_ListList_ListList","oldIndex","newIndex","arrayMove","newText","filter","Fab","bottom","right","Add","onExited","lib","onCopy","result","alert","Share","onDeleteAllChecked","DeleteSweep","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","rows","multiline","DialogActions","trim","toConsumableArray","onAdd","Snackbar","anchorOrigin","vertical","horizontal","event","reason","autoHideDuration","ContentProps","message","action","then","left","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","packageJson","version","ReactDOM","render","src_App","document","getElementById","URL","process","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d496500e.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { SortableElement } from 'react-sortable-hoc'\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  IconButton,\n  MenuItem,\n  Menu,\n  Checkbox,\n  Paper,\n  Grid,\n  TextField,\n  Button\n} from '@material-ui/core'\nimport {\n  MoreVert as MoreIcon,\n  Edit as EditIcon,\n  Check as CheckIcon,\n  Close as CloseIcon,\n  Delete as DeleteIcon\n} from '@material-ui/icons'\n\nconst ItemItem = ({ item, isItemActive, onCheck, onEdit, onDelete }) => {\n  const [editingItem, setEditingItem] = React.useState(false)\n  const [editingText, setEditingText] = React.useState('')\n  const [itemMenuAnchorEl, setItemMenuAnchorEl] = React.useState(null)\n\n  const itemMenuOpen = Boolean(itemMenuAnchorEl)\n\n  return (\n    <ListItem\n      className='mb-4'\n      component={Paper}\n      elevation={isItemActive ? 4 : 1}\n      style={{ opacity: item.checked ? 0.6 : 1 }}\n    >\n      {!editingItem &&\n      <Fragment>\n        <ListItemText\n          primary={\n            <Fragment>\n              <Checkbox checked={item.checked} color='primary' />\n              <span style={{ fontWeight: 'bold', userSelect: 'none', textDecoration: (item.checked ? 'line-through' : 'none') }}>{item.text}</span>\n            </Fragment>\n          }\n          onClick={() => onCheck(item.id)}\n        />\n        <IconButton\n          aria-label='item options'\n          aria-owns={itemMenuOpen ? 'item-menu' : null}\n          aria-haspopup='true'\n          onClick={(e) => setItemMenuAnchorEl(e.currentTarget)}\n        >\n          <MoreIcon />\n        </IconButton>\n        <Menu\n          id='item-menu'\n          anchorEl={itemMenuAnchorEl}\n          open={itemMenuOpen}\n          onClose={() => setItemMenuAnchorEl(null)}\n        >\n          <MenuItem onClick={() => {\n            setEditingItem(true)\n            setEditingText(item.text)\n            setItemMenuAnchorEl(null)\n          }}>\n            <ListItemIcon><EditIcon /></ListItemIcon>\n            <ListItemText inset primary='Edit' />\n          </MenuItem>\n          <MenuItem onClick={() => onDelete(item.id)}>\n            <ListItemIcon><DeleteIcon /></ListItemIcon>\n            <ListItemText inset primary='Delete' />\n          </MenuItem>\n        </Menu>\n      </Fragment>\n      }\n      {editingItem &&\n        <Grid container className='d-block d-sm-flex'>\n          <Grid item style={{ flexGrow: 1 }}>\n            <TextField\n              fullWidth\n              autoFocus\n              onChange={(e) => setEditingText(e.target.value)}\n              value={editingText}\n            />\n          </Grid>\n          <Grid item className='mt-3 mt-sm-0'>\n            <Button className='ml-2' variant='contained' size='small' color='primary' onClick={() => {\n              onEdit(item.id, editingText)\n              setEditingItem(false)\n              setEditingText('')\n            }}>\n              <CheckIcon style={{ fontSize: 20 }} />\n              <span className='d-none d-sm-block ml-1'>Save</span>\n            </Button>\n            <Button className='ml-2' variant='contained' size='small' onClick={() => {\n              setEditingItem(false)\n              setEditingText('')\n            }}>\n              <CloseIcon style={{ fontSize: 20 }} />\n              <span className='d-none d-sm-block ml-1'>Cancel</span>\n            </Button>\n          </Grid>\n        </Grid>\n      }\n    </ListItem>\n  )\n}\n\nItemItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  isItemActive: PropTypes.bool.isRequired,\n  onCheck: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired\n}\n\nItemItem.defaultProps = {\n}\n\nexport default SortableElement(ItemItem)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { SortableContainer } from 'react-sortable-hoc'\nimport List from '@material-ui/core/List'\n\nimport ItemItem from '../ItemItem'\n\nconst ListList = ({ items, sortingItemIndex, onCheck, onEdit, onDelete, onSortStart, onSortEnd }) => {\n  return (\n    <SortableList\n      items={items}\n      sortingItemIndex={sortingItemIndex}\n      onCheck={onCheck}\n      onEdit={onEdit}\n      onDelete={onDelete}\n      onSortStart={onSortStart}\n      onSortEnd={onSortEnd}\n      lockAxis='y'\n      useWindowAsScrollContainer\n      transitionDuration={600}\n      pressDelay={100}\n      helperClass='item--active'\n    />\n  )\n}\n\nListList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object),\n  sortingItemIndex: PropTypes.number,\n  onCheck: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onSortStart: PropTypes.func.isRequired,\n  onSortEnd: PropTypes.func.isRequired\n}\n\nListList.defaultProps = {\n  items: [],\n  sortingItemIndex: null\n}\n\nexport default ListList\n\n// Wrapper\nconst SortableList = SortableContainer(({ items, sortingItemIndex, onCheck, onEdit, onDelete }) => (\n  <List style={{ padding: 0 }}>\n    {items.map((item, index) => (\n      <ItemItem\n        key={`item-${item.id}`}\n        index={index}\n        item={item}\n        isItemActive={sortingItemIndex === index}\n        onCheck={onCheck}\n        onEdit={onEdit}\n        onDelete={onDelete}\n      />\n    ))}\n  </List>\n))\n","/* globals btoa, atob */\n\nconst ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\nexport const makeId = (length = 10) => (\n  Array(length).join().split(',').map(() => (\n    ALPHABET.charAt(Math.floor(Math.random() * ALPHABET.length))\n  )).join('')\n)\n\n// Replace non-url-safe characters to more safe ones, replacing '+', '/' and '=' to '.', '_' and '-' respectively\nconst makeBase64UrlSafe = str => str.replace(/\\+/g, '.').replace(/\\//g, '_').replace(/=/g, '-')\n// Replace the saem url-safe characters back to standard base64 characters\nconst makeUrlBase64Safe = str => str.replace(/\\./g, '+').replace(/_/g, '/').replace(/-/g, '=')\n// Base64 characters are 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' and = for padding\n// Last 3 are not safe for URLs\n\nexport const stringifyItems = (items) => (\n  // Before base64 encoded, each item will be minimized like this:\n  // 'Make to do list1|Realize you've already accomplished 2 things1|Check off first thing on to do list1|Reward yourself with nap0'\n  makeBase64UrlSafe(btoa(items.reduce((acc, curr) => (\n    acc += `|${curr.text}${curr.checked ? '1' : '0'}`\n  ), '').substr(1)))\n)\n\nexport const getShareLink = (items) => (\n  `${window.location.origin}${window.location.pathname}${items.length > 0 ? `?import=${stringifyItems(items)}` : ''}`\n)\n\nexport const parseItems = (strItems) => {\n  const delimiter = '{{proper_delimiter}}'\n  strItems = makeUrlBase64Safe(strItems)\n  // Find all cases with digit and double quotation together and split it removing only the double quotation\n  // Then we have array of strings and at the end of the string should be 0 or 1 for unchecked or checked respectively\n  return atob(strItems).replace(/(\\d)\\|/g, `$1${delimiter}`).split(delimiter).map((strItem) => ({\n    id: makeId(),\n    text: strItem.substring(0, strItem.length - 1),\n    checked: strItem.substring(strItem.length - 1) === '1'\n  }))\n}\n\nexport const getQueryVariable = (key) => {\n  const query = window.location.search.substring(1)\n  const vars = query.split('&')\n  for (let i = 0; i < vars.length; i++) {\n    const posSplit = vars[i].indexOf('=')\n    if (vars[i].substr(0, posSplit) === key) {\n      return vars[i].substr(posSplit + 1)\n    }\n  }\n  return false\n}\n\n// export const delay = (ms = 1000) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const plural = (nr, singularWord, pluralWord, includeNr = true) => (\n  `${includeNr ? nr + ' ' : ''}${nr === 1 ? singularWord : pluralWord}`\n)\nexport const pluralItems = (nr, includeNr = true) => plural(nr, 'item', 'items', includeNr)\n\n// ################################ //\n// ########## Test cases ########## //\n// ################################ //\n\nwindow.testShareMethod = (items) => {\n  const defaultTestCase = [\n    { id: 'GmQHYM3b8i', text: 'Make to do list', checked: true },\n    { id: 'HP3OJ6nOIG', text: 'Realize you\\'ve already accomplished 2 things', checked: true },\n    { id: 't6brMWNG2d', text: 'Check off first thing on to do list', checked: true },\n    { id: 'DbxtHafhkH', text: 'Reward yourself with nap', checked: false }\n  ]\n  const itemsX = Array.isArray(items) ? items : defaultTestCase\n\n  console.log('itemsBefore:', itemsX)\n  const itemsStringified = stringifyItems(itemsX)\n  console.log('itemsStringified:', itemsStringified)\n  const itemsY = parseItems(itemsStringified)\n  console.log('itemsAfter:', itemsY)\n\n  const x = itemsX.reduce((acc, curr) => (acc += `|${curr.text}${curr.checked ? '1' : '0'}`), '').substr(1)\n  const y = itemsY.reduce((acc, curr) => (acc += `|${curr.text}${curr.checked ? '1' : '0'}`), '').substr(1)\n  console.log('X:', x)\n  console.log('Y:', y)\n  console.log('is items the same: ', x === y ? 'YES' : 'NO!')\n}\n","/* global localStorage */\nimport { useState, useEffect } from 'react'\n\nconst useLocalStorage = (key, initialValue, raw) => {\n  const [state, setState] = useState(() => {\n    try {\n      const localStorageValue = localStorage.getItem(key)\n      if (typeof localStorageValue !== 'string') {\n        localStorage.setItem(key, raw ? String(initialValue) : JSON.stringify(initialValue))\n        return initialValue\n      } else {\n        return raw ? localStorageValue : JSON.parse(localStorageValue || 'null')\n      }\n    } catch (error) {\n      // If user is in private mode or has storage restriction\n      // localStorage can throw. JSON.parse and JSON.stringify\n      // can throw, too.\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    try {\n      const serializedState = raw ? String(state) : JSON.stringify(state)\n      localStorage.setItem(key, serializedState)\n    } catch (error) {\n      // If user is in private mode or has storage restriction\n      // localStorage can throw. Also JSON.stringify can throw.\n    }\n  })\n\n  return [state, setState]\n}\n\nexport default useLocalStorage\n","/* globals alert */\nimport React from 'react'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport indigo from '@material-ui/core/colors/indigo'\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Fab,\n  TextField,\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Snackbar,\n  Zoom,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions\n} from '@material-ui/core'\nimport {\n  Add as AddIcon,\n  MoreVert as MoreVertIcon,\n  Share as ShareIcon,\n  DeleteSweep as DeleteSweepIcon,\n  Close as CloseIcon\n} from '@material-ui/icons'\nimport { arrayMove } from 'react-sortable-hoc'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport ListList from './components/ListList'\nimport {\n  makeId,\n  getShareLink,\n  parseItems,\n  getQueryVariable,\n  pluralItems\n} from './utilityFunctions'\nimport useLocalStorage from './misc/useLocalStorage'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: indigo\n  },\n  typography: {\n    useNextVariants: true\n  }\n})\n\nconst App = () => {\n  const [items, setItems] = useLocalStorage('list', [])\n  const [sortingItem, setSortingItem] = React.useState(null)\n  const [modalAddItemsOpen, setModalAddItemsOpen] = React.useState(false)\n  const [textareaAddItems, setTextareaAddItems] = React.useState('')\n  const [appMenuAnchorEl, setAppMenuAnchorEl] = React.useState(null)\n  const [confirmCounterdeleteAllChecked, setConfirmCounterdeleteAllChecked] = React.useState(0)\n  const [confirmCounterdeleteAllItems, setConfirmCounterdeleteAllItems] = React.useState(0)\n  const [snackbarCopiedConfirmOpen, setSnackbarCopiedConfirmOpen] = React.useState(false)\n  const [snackbarDeletedUndoOpen, setSnackbarDeletedUndoOpen] = React.useState(false)\n  const [itemsToBeImport, setItemsToBeImport] = React.useState([])\n  const [itemsBeforeDeletion, setItemsBeforeDeletion] = React.useState([])\n\n  React.useEffect(() => {\n    checkForImports()\n    // eslint-disable-next-line\n  }, [])\n\n  // TODO: Cleanup console logs\n  const checkForImports = () => {\n    const importString = getQueryVariable('import')\n    // console.log('importString:', importString)\n    // If import var isn't set or if it is an empty string\n    if (importString === false || importString === '') return\n\n    const newItems = parseItems(importString)\n    // console.log('newItems:', newItems)\n    // If items is not an array, or the array has 0 items\n    if (!Array.isArray(newItems) || newItems.length === 0) return\n\n    // console.log('current list length:', items.length)\n    // If the current list is empty\n    if (items.length === 0) {\n      // console.log('Item loaded from import string')\n      setItems(newItems)\n      // Refresh and drop all query variables like '?import=YTB8...'\n      setTimeout(() => {\n        window.location.href = `${window.location.origin}${window.location.pathname}`\n      }, 0)\n    } else {\n      setItemsToBeImport(newItems)\n    }\n  }\n\n  const onSortStart = ({ index }) => {\n    setSortingItem(index)\n  }\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    setItems(arrayMove(items, oldIndex, newIndex))\n    setSortingItem(null)\n  }\n\n  const onAdd = (strItems) => {\n    // Convert list items from being a string to an object\n    const newItems = strItems.trim().replace('\\r', '').split('\\n').map(strItem => ({\n      id: makeId(),\n      text: strItem,\n      checked: false\n    }))\n    // Concat the new items to current items\n    overwriteItems([...items, ...newItems])\n  }\n\n  const onCheck = (id) => {\n    const newItems = items.map((item) => {\n      if (item.id === id) {\n        item.checked = !item.checked\n      }\n      return item\n    })\n    overwriteItems(newItems)\n  }\n\n  const onEdit = (id, newText) => {\n    const newItems = items.map((item) => {\n      if (item.id === id) {\n        item.text = newText\n      }\n      return item\n    })\n    overwriteItems(newItems)\n  }\n\n  const onDelete = (id) => {\n    setItemsBeforeDeletion(items)\n    setSnackbarDeletedUndoOpen(true)\n\n    const newItems = items.filter(item => item.id !== id)\n    overwriteItems(newItems)\n  }\n\n  const onDeleteAllChecked = () => {\n    setItemsBeforeDeletion(items)\n    setSnackbarDeletedUndoOpen(true)\n\n    const newItems = items.filter(item => !item.checked)\n    overwriteItems(newItems)\n  }\n\n  const onDeleteAllItems = () => {\n    setItemsBeforeDeletion(items)\n    setSnackbarDeletedUndoOpen(true)\n\n    overwriteItems([])\n  }\n\n  const onUndoDeletion = () => {\n    overwriteItems(itemsBeforeDeletion).then(() => {\n      setItemsBeforeDeletion([])\n    })\n  }\n\n  const overwriteItems = (newItems) => {\n    return new Promise(resolve => {\n      setItems(newItems)\n      resolve()\n    })\n  }\n\n  const handleImportConflictClose = () => {\n    // Empty itemsToBeImport then drop all query variables\n    setItemsToBeImport([])\n    setTimeout(() => {\n      window.location.href = `${window.location.origin}${window.location.pathname}`\n    }, 0)\n  }\n\n  const menuAppOpen = Boolean(appMenuAnchorEl)\n  const modalImportConflictOpen = itemsToBeImport.length > 0\n  const isAnyItemsChecked = items.some(item => item.checked)\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <AppBar position='static' className='mb-5'>\n        <Toolbar>\n          <Typography\n            variant='h6'\n            color='inherit'\n            style={{ flexGrow: 1 }}\n            title={`Version ${window.appVersion}`}\n          >List List</Typography>\n          <IconButton\n            aria-label='app options'\n            aria-owns={menuAppOpen ? 'app-options' : null}\n            aria-haspopup='true'\n            onClick={(e) => setAppMenuAnchorEl(e.currentTarget)}\n            color='inherit'\n          >\n            <MoreVertIcon color='inherit' />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <div className='container px-0' style={{ paddingBottom: 108 }}>\n        {items.length === 0 &&\n          <>\n            <p className='text-center p-3'>Your list is empty! You can easily add items to it by pressing the button below</p>\n            <Zoom in={!modalAddItemsOpen}>\n              <p className='text-center'>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  aria-label='add'\n                  onClick={() => setModalAddItemsOpen(true)}\n                >\n                  Add items\n                </Button>\n              </p>\n            </Zoom>\n          </>\n        }\n        {items.length > 0 &&\n          <ListList\n            items={items}\n            sortingItemIndex={sortingItem}\n            onSortEnd={onSortEnd}\n            onCheck={onCheck}\n            onEdit={onEdit}\n            onDelete={onDelete}\n            onSortStart={onSortStart}\n          />\n        }\n      </div>\n      <Zoom in={!modalAddItemsOpen}>\n        <Fab\n          color='primary'\n          aria-label='add'\n          onClick={() => setModalAddItemsOpen(true)}\n          style={{ position: 'fixed', bottom: 26, right: 26 }}\n        >\n          <AddIcon />\n        </Fab>\n      </Zoom>\n      <Menu\n        id='app-options'\n        anchorEl={appMenuAnchorEl}\n        open={menuAppOpen}\n        onClose={() => setAppMenuAnchorEl(null)}\n        onExited={() => setConfirmCounterdeleteAllItems(0)}\n      >\n        <CopyToClipboard\n          text={getShareLink(items)}\n          onCopy={(text, result) => {\n            if (text !== '' && result) {\n              setSnackbarCopiedConfirmOpen(true)\n              setAppMenuAnchorEl(null)\n            } else {\n              console.log('ERROR - CopyToClipboard.onCopy() - (text, result):', text, result)\n              // TODO: Handle this better, drop the alert and display model with message and link so it can be copied manually\n              alert('Some error occurred when copying to clipboard but here is the link:\\n' + getShareLink(items))\n            }\n          }}\n        >\n          <MenuItem>\n            <ListItemIcon><ShareIcon /></ListItemIcon>\n            <ListItemText inset primary='Copy share link' />\n          </MenuItem>\n        </CopyToClipboard>\n        {isAnyItemsChecked &&\n          <MenuItem onClick={() => {\n            if (confirmCounterdeleteAllChecked === 1) {\n              onDeleteAllChecked()\n              setConfirmCounterdeleteAllChecked(0)\n              setAppMenuAnchorEl(null)\n            } else {\n              setConfirmCounterdeleteAllChecked(confirmCounterdeleteAllChecked + 1)\n            }\n          }}>\n            <ListItemIcon><DeleteSweepIcon /></ListItemIcon>\n            <ListItemText inset primary={\n              confirmCounterdeleteAllChecked === 0 ? 'Delete all checked' : 'Are you sure?'\n            } />\n          </MenuItem>\n        }\n        <MenuItem onClick={() => {\n          if (confirmCounterdeleteAllItems === 1) {\n            onDeleteAllItems()\n            setConfirmCounterdeleteAllItems(0)\n            setAppMenuAnchorEl(null)\n          } else {\n            setConfirmCounterdeleteAllItems(confirmCounterdeleteAllItems + 1)\n          }\n        }}>\n          <ListItemIcon><DeleteSweepIcon /></ListItemIcon>\n          <ListItemText inset primary={\n            confirmCounterdeleteAllItems === 0 ? 'Delete all' : 'Are you sure?'\n          } />\n        </MenuItem>\n      </Menu>\n      <Dialog\n        open={modalAddItemsOpen}\n        onClose={() => setModalAddItemsOpen(false)}\n        aria-labelledby='dialog-title'\n        aria-describedby='dialog-description'\n      >\n        <DialogTitle id='dialog-title'>Add to list</DialogTitle>\n        <DialogContent>\n          <DialogContentText id='dialog-description'>\n            You can add many by spliting them into multiple lines\n          </DialogContentText>\n          <TextField\n            rows='7'\n            multiline\n            fullWidth\n            autoFocus\n            onChange={(e) => setTextareaAddItems(e.target.value)}\n            value={textareaAddItems}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button variant='contained' color='primary' onClick={() => {\n            onAdd(textareaAddItems)\n            setModalAddItemsOpen(false)\n            setTextareaAddItems('')\n          }}>\n            Add them\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={snackbarCopiedConfirmOpen}\n        onClose={(event, reason) => {\n          if (reason === 'clickaway') return\n          setSnackbarCopiedConfirmOpen(false)\n        }}\n        autoHideDuration={2000}\n        ContentProps={{ 'aria-describedby': 'message-id' }}\n        message={<span id='message-id'>Link copied!</span>}\n      />\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        open={snackbarDeletedUndoOpen}\n        onClose={(event, reason) => {\n          if (reason === 'clickaway') return\n          setSnackbarDeletedUndoOpen(false)\n        }}\n        autoHideDuration={4000}\n        ContentProps={{ 'aria-describedby': 'message-id' }}\n        message={<span id='message-id'>{pluralItems(itemsBeforeDeletion.length - items.length)} have been deleted</span>}\n        action={[\n          <Button\n            key='undo'\n            variant='contained'\n            color='secondary'\n            size='small'\n            onClick={() => {\n              onUndoDeletion()\n              setSnackbarDeletedUndoOpen(false)\n            }}\n          >\n            Undo\n          </Button>,\n          <IconButton\n            key='close'\n            aria-label='Close'\n            color='inherit'\n            onClick={() => setSnackbarDeletedUndoOpen(false)}\n          >\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n      <Dialog\n        open={modalImportConflictOpen}\n        onClose={handleImportConflictClose}\n        aria-labelledby='dialog-title'\n        aria-describedby='dialog-description'\n      >\n        <DialogTitle id='dialog-title'>Import conflict detected</DialogTitle>\n        <DialogContent>\n          <DialogContentText id='dialog-description'>\n          You are trying to import {pluralItems(itemsToBeImport.length)} but there are already {pluralItems(items.length)} on your list. What do you want to do?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button variant='contained' color='primary' onClick={() => {\n            overwriteItems([...items, ...itemsToBeImport]).then(() => {\n              handleImportConflictClose()\n            })\n          }}>\n            Merge\n          </Button>\n          <Button variant='contained' color='secondary' onClick={() => {\n            overwriteItems(itemsToBeImport).then(() => {\n              handleImportConflictClose()\n            })\n          }}>\n            Overwrite\n          </Button>\n          <Button variant='contained' color='default' style={{ position: 'absolute', left: 4 }} onClick={() => {\n            handleImportConflictClose()\n          }}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </MuiThemeProvider>\n  )\n}\n\nexport default App\n","/* global fetch */\n/* eslint-disable semi */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\n\nimport App from './App'\n\nimport * as serviceWorker from './serviceWorker'\n\nimport packageJson from '../package.json'\nwindow.appVersion = packageJson.version\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}